---
# Configure clang-tidy for this project.

Checks: >
  -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters*,
  google-*,
  misc-*,
  modernize-*,
  -modernize-use-trailing-return-type*,
  performance-*,
  portability-*,
  readability-*,
  -readability-uppercase-literal-suffix*,
  -readability-magic-numbers*,
  -readability-identifier-length*,
  -readability-simplify-boolean-expr*,

# Turn all the warnings from the checks above into errors.
# WarningsAsErrors: "*"


CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,           value: camelCase  }
  - { key: readability-identifier-naming.ClassCase,               value: CamelCase   }
  - { key: readability-identifier-naming.StructCase,              value: CamelCase   }
  - { key: readability-identifier-naming.TemplateParameterCase,   value: CamelCase   }
  - { key: readability-identifier-naming.FunctionCase,            value: camelCase    }
  - { key: readability-identifier-naming.VariableCase,            value: camelBack   }
  - { key: readability-identifier-naming.LocalVariableIgnoredRegexp,            value:   "^d_|h_"   }
  - { key: readability-identifier-naming.ClassMemberCase,        value: camelBack   }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,  value: _          }
  - { key: readability-identifier-naming.PrivateMemberPrefix,    value: '_'   }
    # include d_ and h_ to ignored prefix we used them to make clear on which side the memory is device or host
  - { key: readability-identifier-naming.PrivateMemberIgnoredRegexp,    value:  "^d_|h_|_"   }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase }
  - { key: readability-identifier-naming.ConstexprVariableCase,    value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.MemberConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.StaticVariableCase,       value: camelBack }
  - { key: readability-implicit-bool-conversion.AllowIntegerConditions,  value: 1   }
  - { key: readability-implicit-bool-conversion.AllowPointerConditions,  value: 1   }
